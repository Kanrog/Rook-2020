#//// \\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ 
#\\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ //// 
#
#                              MACROS
#
#//// \\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ 
#\\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ //// \\\\ //// 
#Include TEST_SPEED
[include TEST_SPEED.cfg]
#=====================================================
# START PRINT
#=====================================================
#[gcode_macro START_PRINT]
#gcode:
#    {% set T_BED = params.T_BED|default(50) %}
#    {% set T_EXTRUDER = params.T_EXTRUDER|default(205) %}
#    G92
#        M109 S{T_EXTRUDER} 
#    G28
#    PRIME_LINE

#=====================================================
# START PRINT TEST
#=====================================================
[gcode_macro START_PRINT]
gcode:
    {% set bed_temp = params.T_BED|default(60)|float %}
    {% set extruder_temp = params.T_EXTRUDER|default(210)|float %}
    M83 ; etruder relative mode
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={extruder_temp}
    {% if printer.configfile.settings.heater_bed is defined %}
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bed_temp}
        RESPOND TYPE=error MSG='Extruder set to {extruder_temp}, bed set to {bed_temp}, waiting for bed to reach temperature...'
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bed_temp - 2.0}
    {% else %}
        RESPOND TYPE=error MSG='Extruder set to {extruder_temp}'
    {% endif %}
    RESPOND TYPE=error MSG='Homing...'
    G28 ; home all axis
    {% if printer.configfile.settings.probe is defined %}
        RESPOND TYPE=error MSG='Mesh calibrate...'
        BED_MESH_CALIBRATE ; level bed
    {% endif %}
    RESPOND TYPE=error MSG='Waiting for extruder temp...'
    G90 ; use absolute coords
    G1 X0 Y0 F3000
    G1 Z5 F3000
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={extruder_temp - 2.0}
    #G28 ; home all axis
    PRIME_LINE

#=====================================================
# END PRINT
#=====================================================
[gcode_macro END_PRINT]
gcode:
    G90
    G1 X120 Y120 F1500
    G1 E-20 F5000
    G1 Z216 F5000
    M104 S0
    M140 S0
    M204
    M106 S0
    M84

#=====================================================
# PRIME LINE
#=====================================================
[gcode_macro PRIME_LINE]
gcode: 
    M117 Prime Line
    G90
    G92 E0
    G1 Z2.0 F3000
    G1 X0.1 Y2.0 Z0.28 F5000.0
    G1 X0.1 Y100.0 Z0.28 F1000.0 E25
    G1 X0.4 Y2.0 Z0.28 F5000.0
    G1 X0.4 Y100.0 Z0.28 F1000.0 E30
    G92 E0
    G1 Z2.0 F3000

#=====================================================
# PRIME LINE TEST
#=====================================================
#[gcode_macro PRIME_LINE]
#gcode:
#    RESPOND TYPE=error MSG='Purging nozzle...'
#    G90
#    G1 X0 Y0 F3000 ; Go to front
#    G1 Z0.15 F3000 ; Drop to bed
#    G92 E0 ; zero the extruded length
#    G1 X40 E25 F500 ; Extrude 25mm of filament in a 4cm line
#    G92 E0 ; zero the extruded length
#    G1 E-1 F500 ; Retract a little
#    G1 X10 F5000 ; Quickly wipe away from the filament line
#    G1 Z0.3 ; Raise and begin printing.
#    RESPOND TYPE=error MSG='Nozzle purged!

#=====================================================
# PARK PRINTER
#=====================================================
# Park toolhead
[gcode_macro M125]
gcode:
    SAVE_GCODE_STATE NAME=parking
    M117 Parking toolhead
    G91
    G1 Z10 F600
    G90
    G1 X10 Y60 F4000 
    RESTORE_GCODE_STATE NAME=parking

#=====================================================
# BED MESH
#=====================================================
[gcode_macro G29]
gcode:
    G28
    BED_MESH_CALIBRATE
    G0 Z10 F6000
    BED_MESH_PROFILE save=default

#=====================================================
# LOW TEMP CHECK
#=====================================================
[gcode_macro LOW_TEMP_CHECK]
gcode:
    {% set T_EXTRUDER = params.T_EXTRUDER|default(205) %}
    {% if printer.extruder.target != 0 %} 
        {% if printer.extruder.temperature < printer.extruder.target %} 
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %}
        {% if printer.extruder.target < T_EXTRUDER %} 
            M118 No setpoint, heating to {T_EXTRUDER}.
            M109 S{T_EXTRUDER}
        {% endif %}
    {% endif %}

#======================================================
# LOAD FILAMENT
#======================================================
[gcode_macro M701]
#[gcode_macro Load_Filament]
gcode:
    SAVE_GCODE_STATE NAME=loading_filament
    M117 Loading Filament
    M83
    G92 E0.0
    LOW_TEMP_CHECK
    G1 E120 F3000  
    G1 E50 F200  
    G92 E0.0
    RESTORE_GCODE_STATE NAME=loading_filament

#======================================================
# UNLOAD FILAMENT
#======================================================
[gcode_macro M702]
#[gcode_macro Unload_Filament]
gcode:
    SAVE_GCODE_STATE NAME=unloading_filament
    M125 
    M117 Unloading Filament 
    LOW_TEMP_CHECK
    G91 
    G1 E10 F100 
    G92 E0.0
    G1 E-150 F3000 
    G92 E0.0
    RESTORE_GCODE_STATE NAME=unloading_filament

#======================================================
# FILAMENT CHANGE
#======================================================
[gcode_macro M600]
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{10}
    G90
    G1 X10 Y60 F3000
    G91
    G1 E-1 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#======================================================
# COUNTDOWN MACRO
#======================================================
[gcode_macro COUNTDOWN]
gcode:
    {% set MSG = params.MSG|default("Time: ") %}
    {% set TIME = params.TIME|default(10) %}
    {% for s in range(TIME|int, 0, -1) %}
        G4 P1000
        M117 {params.MSG} {s}s
        M118 {params.MSG} {s}s
    {% endfor %}


[pause_resume]

#=====================================================
# PAUSE
#=====================================================

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(5) %}      #edit to your park position
    {% set y = params.Y|default(60) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

#=====================================================
# RESUME
#=====================================================

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

#=====================================================
# CANCEL
#=====================================================

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT


#=====================================================
# Manual Bed Level
#=====================================================

[gcode_macro LEVEL_BED]
description: run manual bed leveling
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}
  BED_SCREWS_ADJUST

#=====================================================
# Filament IN
#=====================================================
[gcode_macro FILAMENT_IN]
description: Filament In
gcode:
  G91
  G1 E80 F2000
  G1 E50 F300
  G1 E-5 F400
  G90

#=====================================================
# Filament OUT
#=====================================================
[gcode_macro FILAMENT_OUT]
description: Filament Out
gcode:
  G91
  G1 E10 F600
  G1 E-500 F2000
  G90

#=====================================================
# PID Hotend
#=====================================================
[gcode_macro PID_HOTEND]
description: Calibrate PID Hotend
gcode:
    M106 S255
    PID_CALIBRATE HEATER=extruder TARGET=200

#=====================================================
# PID Hotbed
#=====================================================
[gcode_macro PID_HOTBED]
description: Calibrate PID Hotbed
gcode:
    M106 S255
    PID_CALIBRATE HEATER=heater_bed TARGET=60

#=====================================================
# Input Shaper
#=====================================================
[gcode_macro SHAPE]
description:Input Shaper
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}
    SHAPER_CALIBRATE



#=====================================================
# Torture   ##  These are here to help you find the limits. (USE AT YOUR OWN RISK!) credits to Icesythe7 for simplifying these
#=====================================================

[gcode_macro TORTURE]
description: Test all axis movements at max speeds set in mainsail
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}
  G90
  G1 X5 Y5 F10000
  G1 Z10 F5000
  G91
  {% set repeat_count = 8 %}
  {% for repeat in range(repeat_count) %}
      G1 X+100 F500000
      G1 Y+100 F500000
      G1 X-100 F500000
      G1 Y-100 F500000
      G1 Z+180 F450000
      G1 Z-180 F450000
      G1 Z+180 F450000
      G1 Z-180 F450000
  {% endfor %}
  G1 X45 Y45 F10000
#  G1 Z50 F5000
  G91
    {% set repeat_count = 8 %}
  {% for repeat in range(repeat_count) %}
      G1 X+15 F800000
      G1 X-15 F800000
  {% endfor %}
      {% set repeat_count = 8 %}
  {% for repeat in range(repeat_count) %}
      G1 Y+15 F800000
      G1 Y-15 F800000
   {% endfor %}
  G90

[gcode_macro TORTURE_Z]
description: Test z axis movements
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  G90
  G1 Z10 F5000
  G91
  {% set repeat_count = 8 %}
  {% set ns = namespace(z_coord=180) %}
  {% for repeat in range(repeat_count) %}
    G1 Z{ns.z_coord} F450000
    {% set ns.z_coord = ns.z_coord * -1 %}
  {% endfor %}
  G90

[gcode_macro TORTURE_XY]
description: Test x and y axis movements
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  G90
  G1 X5 Y5 F10000
  G1 Z10 F5000
  G91
    {% set repeat_count = 8 %}
  {% for repeat in range(repeat_count) %}
  G1 X+100 F500000
  G1 Y+100 F500000
  G1 X-100 F500000
  G1 Y-100 F500000
  {% endfor %}
  G90

[gcode_macro TORTURE_SHAKE]
description: Shake it baby
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  G90
  G1 X45 Y45 F10000
  G1 Z50 F5000
  G91
    {% set repeat_count = 8 %}
  {% for repeat in range(repeat_count) %}
  G1 X+15 F800000
  G1 X-15 F800000
  {% endfor %}
      {% set repeat_count = 8 %}
  {% for repeat in range(repeat_count) %}
  G1 Y+15 F800000
  G1 Y-15 F800000
   {% endfor %}
  G90

[gcode_macro WALK]
description: RUN FORREST! RUN!!
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
  G28
  {% endif %}
  G90
  G1 X5 Y5 F10000
  G1 Z200 F5000
  G91
    {% set repeat_count =20 %}
  {% for repeat in range(repeat_count) %}
  G1 X+100 F500000
  G1 Y+100 F500000
  G1 X-100 F500000
  G1 Y-100 F500000
  {% endfor %}
  G90